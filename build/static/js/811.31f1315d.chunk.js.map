{"version":3,"file":"static/js/811.31f1315d.chunk.js","mappings":"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","sources":["components/FormInput.js","components/Spinner.js","helpers/api_appmanage/apiCore.js","helpers/api_appmanage/appManager.js","pages/appdetailtabs/appaccess.js","pages/appdetailtabs/appcontainer.js","pages/appdetailtabs/appoverview.js","pages/appdetailtabs/appuninstall.js","pages/appdetail.js","pages/myapps.js"],"sourcesContent":["// @flow\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className, value, readOnly }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    defaultValue={value}\n                    readOnly={readOnly}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    value,\n    readOnly,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    value={value}\n                                    readOnly={readOnly}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                value={value}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm',\n    type?: 'bordered' | 'grow',\n    color?: string,\n    children?: any,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\n    const children = props.children || null;\n    const Tag = props.tag || 'div';\n    const color = props.color || 'secondary';\n    const size = props.size || '';\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                {\n                    'spinner-border': props.type === 'bordered',\n                    'spinner-grow': props.type === 'grow',\n                },\n                [`text-${color}`],\n                { [`avatar-${size}`]: size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n};\n\nexport default Spinner;\n","import cockpit from 'cockpit';\n\nvar IP;\n\nclass APICore {\n    getIp = async () => {\n        if (!IP) {\n            cockpit.spawn([\"docker\", \"inspect\", \"-f\", \"{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\", \"websoft9-appmanage\"]).then((data) => {\n                IP = data.trim();\n            }).catch((error) => {\n                throw new Error(`Docker command failed: ${error}`);\n            })\n        }\n        return IP;\n    }\n\n    get = async (url, params) => {\n        await this.getIp();\n        let http = response = cockpit.http({\n            \"address\": IP,\n            \"port\": 5000,\n        });\n\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = http.get(`${url}?${queryString}`, params);\n        } else {\n            response = http.get(`${url}`, params);\n        }\n        return response;\n    };\n}\n\nexport { APICore };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n//App 列表查询\nfunction AppList(params: any): Promise<any> {\n    const baseUrl = '/AppList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 卸载\nfunction AppUninstall(params: any): Promise<any> {\n    const baseUrl = '/AppUninstall';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 停止\nfunction AppStop(params: any): Promise<any> {\n    const baseUrl = '/AppStop';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 启动\nfunction AppStart(params: any): Promise<any> {\n    const baseUrl = '/AppStart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 重启\nfunction AppRestart(params: any): Promise<any> {\n    const baseUrl = '/AppRestart';\n    return api.get(`${baseUrl}`, params);\n}\n\n//App 状态查询\nfunction AppStatus(params: any): Promise<any> {\n    const baseUrl = '/AppStatus';\n    return api.get(`${baseUrl}`, params);\n}\n\n//查询APP对应的域名\nfunction AppDomainList(params: any): Promise<any> {\n    const baseUrl = '/AppDomainList';\n    return api.get(`${baseUrl}`, params);\n}\n\n//删除APP绑定的域名\nfunction AppDomainDelete(params: any): Promise<any> {\n    const baseUrl = '/AppDomainDelete';\n    return api.get(`${baseUrl}`, params);\n}\n\n//修改APP绑定的域名\nfunction AppDomainUpdate(params: any): Promise<any> {\n    const baseUrl = '/AppDomainUpdate';\n    return api.get(`${baseUrl}`, params);\n}\n\n//APP绑定域名\nfunction AppDomainAdd(params: any): Promise<any> {\n    const baseUrl = '/AppDomainAdd';\n    return api.get(`${baseUrl}`, params);\n}\n\n//设定默认域名\nfunction AppDomainSet(params: any): Promise<any> {\n    const baseUrl = '/AppDomainSet';\n    return api.get(`${baseUrl}`, params);\n}\n\n//获取插件登录数据\nfunction AppSearchUsers(params: any): Promise<any> {\n    const baseUrl = '/AppSearchUsers';\n    return api.get(`${baseUrl}`, params);\n}\n\nexport { AppDomainAdd, AppDomainDelete, AppDomainList, AppDomainSet, AppDomainUpdate, AppList, AppRestart, AppSearchUsers, AppStart, AppStatus, AppStop, AppUninstall };\n\n\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport { default as React, useEffect, useState } from 'react';\nimport { Alert, Badge, Button, Card, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport FormInput from '../../components/FormInput';\nimport Spinner from '../../components/Spinner';\nimport { AppDomainAdd, AppDomainDelete, AppDomainList, AppDomainSet, AppDomainUpdate } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//删除绑定的域名\nconst RemoveDomain = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Delete domain binding\")}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"Are you sure you want to delete the domain for:\")} {props.deleteRowData.domainValue} ? </span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        AppDomainDelete({ app_id: props.deleteRowData.app_id, domain: props.deleteRowData.domainValue }).then((response) => {\n                            response = JSON.parse(response);\n                            if (response.Error) {\n                                setShowAlert(true);\n                                setAlertMessage(response.Error.Message);\n                            }\n                            else { //删除成功\n                                setDisable(false);\n                                closeAllModals();\n                            }\n                        })\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setDisable(false);\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Delete\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst AppAccess = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [domains, setDomains] = useState([]); // 定义域名数组\n    const [loading, setLoading] = useState(false); // 定义执行操作时的加载转态\n\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");  //用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");  //用于确定弹窗的类型：error\\success\n    const [showRemoveDomain, setShowRemoveDomain] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [deleteRowData, setDeleteRowData] = useState(null); //用于保存将要删除的行数据\n    const [inputDomainValue, setInputDomainValue] = useState(\"\");//用户保存用户输入的域名\n\n    const [isExpandedForDomain, setIsExpandedForDomain] = React.useState(true); //用于保存“域名绑定”的折叠状态\n    const [isExpandedForNoDomain, setIsExpandedForNoDomain] = React.useState(true);//用于保存“无域名访问”的折叠状态\n    const [isExpandedForAccount, setIsExpandedForAccount] = React.useState(false);//用于保存“无域名访问”的折叠状态\n\n    const getDomains = async () => {\n        try {\n            await AppDomainList({ app_id: props.data.app_id }).then((response) => {\n                response = JSON.parse(response);\n                if (response.Error) {\n                    setShowAlert(true);\n                    setAlertType(\"error\")\n                    setAlertMessage(response.Error.Message);\n                }\n                else {\n                    let responseData = response.ResponseData.Domain_set;\n                    let defaultdomain = responseData.default_domain; //获取返回的默认域名数据\n\n                    let resturnDomains = responseData.domains.map(domain => {\n                        return {\n                            app_id: props.data.app_id,\n                            domainValue: domain,\n                            newDomainValue: domain,\n                            isEditable: false,\n                            isFromAPI: true,\n                            isDefaultDomain: domain === defaultdomain ? true : false\n                        };\n                    });\n                    //排序：将默认域名放前面\n                    resturnDomains.sort((a, b) => {\n                        return b.isDefaultDomain - a.isDefaultDomain;\n                    });\n                    setDomains(resturnDomains);\n                }\n            })\n        }\n        catch (error) {\n            console.log(error);\n            navigate(\"/error-500\");\n        }\n    }\n\n    useEffect(() => {\n        getDomains();\n    }, []);\n\n    //添加域名\n    const addRow = () => {\n        if (domains.length < 10) {\n            // 限制最多只能有10个domain\n            setDomains([\n                ...domains,\n                {\n                    app_id: props.data.app_id,\n                    domainValue: \"\",\n                    newDomainValue: \"\",\n                    isEditable: true,\n                    isFromAPI: false,\n                    isDefaultDomain: false\n                },\n            ]);\n        }\n    }\n\n    //删除域名\n    const deleteRow = async (row, index) => {\n        if (!row.isFromAPI) { //如果是点“添加”产生的记录行，则直接删除，不需要调用接口\n            const newRows = [...domains]; // 复制状态数组\n            newRows.splice(index, 1); // 删除指定索引的对象\n            setDomains(newRows); // 更新状态数组\n        }\n        else { //表示记录是从接口获取的，删除时需要调用接口删除\n            setShowRemoveDomain(true);\n            setDeleteRowData(row);\n        }\n    }\n\n    //编辑\n    const editRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //取消编辑\n    const cancelEditRow = (index) => {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = newRows[index].domainValue; // 用户有修改但是取消编辑，需要将数据还原\n        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    //设为默认域名\n    const setDefaultDomain = async (index) => {\n        const defaultDomain = domains[index].newDomainValue; //获取域名\n        setLoading(true);\n        try {  //调用设定默认域名接口\n            AppDomainSet({ app_id: props.data.app_id, domain: defaultDomain }).then((response) => {\n                response = JSON.parse(response);\n                if (response.Error) {\n                    setShowAlert(true);\n                    setAlertType(\"error\")\n                    setAlertMessage(response.Error.Message);\n                }\n                else {\n                    setShowAlert(true);\n                    setAlertType(\"success\")\n                    setAlertMessage(_(\"Success\"));\n                    getDomains();\n                }\n            })\n\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n\n    //保存\n    const saveRow = async (row, index) => {\n        const input = document.getElementsByName(`domain-${index}`)[0]; // 获取搜索框元素\n        const value = input.value; // 获取搜索框的值\n        const regex = /^(?!https?:\\/\\/)([\\da-z\\.-]+\\.)*([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/; // 定义一个正则表达式，用来验证域名的格式\n        if (value) {\n            if (regex.test(value)) {\n                if (row.isFromAPI) { //如果取到isFromAPI为true,表示要修改数据\n                    if (row.domainValue != row.newDomainValue) { //如果修改前的数据不等于修改后的数据，则调用修改接口\n                        setLoading(true);\n                        try {\n                            AppDomainUpdate({ app_id: props.data.app_id, domain_old: row.domainValue, domain_new: value }).then((response) => {\n                                response = JSON.parse(response);\n                                if (response.Error) {\n                                    setShowAlert(true);\n                                    setAlertType(\"error\")\n                                    setAlertMessage(response.Error.Message);\n                                }\n                                else {\n                                    setShowAlert(true);\n                                    setAlertType(\"success\")\n                                    setAlertMessage(_(\"Success\"));\n                                    getDomains();\n                                }\n                            })\n                        }\n                        catch (error) {\n                            navigate(\"/error-500\");\n                        }\n                        finally {\n                            setLoading(false);\n                        }\n                    }\n                    else {\n                        const newRows = [...domains]; // 复制状态数组\n                        newRows[index].isEditable = !newRows[index].isEditable; // 切换isEditable属性\n                        setDomains(newRows); // 更新状态数组\n                    }\n                }\n                else { //如果取到isFromAPI为false,表示是绑定数据 \n                    try {\n                        setLoading(true);\n                        AppDomainAdd({ app_id: props.data.app_id, domains: value }).then((response) => {\n                            response = JSON.parse(response);\n                            if (response.Error) {\n                                setShowAlert(true);\n                                setAlertType(\"error\")\n                                setAlertMessage(response.Error.Message);\n                            }\n                            else {\n                                setShowAlert(true);\n                                setAlertType(\"success\")\n                                setAlertMessage(_(\"Success\"));\n                                getDomains();\n                            }\n                        })\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                    finally {\n                        setLoading(false);\n                    }\n                }\n            } else {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(_(\"Please enter the correct domain name and cannot start with http or https!\"));\n            }\n        }\n        else {\n            // 如果搜索框的值为空\n            setShowAlert(true);\n            setAlertType(\"error\")\n            setAlertMessage(_(\"Domain name cannot be empty\"));\n        }\n    }\n\n    //处理输入\n    function handleChange(index, e) {\n        const newRows = [...domains]; // 复制状态数组\n        newRows[index].newDomainValue = e.target.value; // 修改inputValue属性\n        setDomains(newRows); // 更新状态数组\n    }\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于取消删除域名弹窗\n    const cancelRemoveDomain = () => {\n        setShowRemoveDomain(false);\n    };\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const handleChangefordomin = (event, newExpanded) => {\n        setIsExpandedForDomain(newExpanded);\n    };\n\n    const handleChangefornodomin = (event, newExpanded) => {\n        setIsExpandedForNoDomain(newExpanded);\n    };\n\n    const handleChangeforaccount = (event, newExpanded) => {\n        setIsExpandedForAccount(newExpanded);\n    };\n\n    return (\n        <>\n            <Card>\n                {loading && (\n                    <div className=\"card-disabled\" style={{ zIndex: 999 }}>\n                        <div className=\"card-portlets-loader\"></div>\n                    </div>\n                )}\n                <Card.Body>\n                    <Accordion defaultExpanded={true} onChange={handleChangefordomin} className='mb-2'>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Domain Access\")}</label>\n                                <span className=\"me-2 fs-6\" style={{ display: isExpandedForDomain ? 'inline' : 'none' }}>\n                                    {_(\"Access the domain name for better application performance, https and custom configuration can click\")}\n                                    {\" \"}\n                                    {/* <a href=\"/nginx\" target=\"_parent\">\n                                        {_(\"more\")}\n                                    </a> */}\n                                    <a href=\"#\" onClick={(e) => {\n                                        e.preventDefault();\n                                        let url = `nginx#/nginxproxymanager/nginx/proxy`;\n                                        cockpit.file('/etc/hostname').watch(content => {\n                                            console.log(content);\n                                        });\n                                        cockpit.jump(url);\n                                    }} >\n                                        {_(\"more\")}\n                                    </a>\n                                </span>\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"mb-2 align-items-center\">\n                                            <Col xs={12} md={12} className=\"d-flex justify-content-end\">\n                                                <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={() => addRow()}>{_(\"Add Domain\")}</Button>\n                                                {\n                                                    props.data?.config?.admin_domain_url && (\n                                                        <a href={props.data?.config?.admin_domain_url} target=\"_blank\" className=\"me-2\">\n                                                            <Button variant=\"primary\" size=\"sm\">{_(\"Admin Page\")}</Button>\n                                                        </a>\n                                                    )\n                                                }\n                                                <Button size=\"sm\" className=\"me-2\" variant=\"primary\"\n                                                    onClick={async () => {\n                                                        setLoading(true);\n                                                        await getDomains();\n                                                        setLoading(false);\n                                                    }} > {_(\"Refresh\")}\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        {domains.map((row, index) => (\n                                            <Row className=\"mb-2\" key={index}>\n                                                <Col xs={12} className=\"d-flex justify-content-between\">\n                                                    <Col>\n                                                        <FormInput className=\"mb-2 mb-md-0\" type=\"text\"\n                                                            name={`domain-${index}`}\n                                                            value={row.newDomainValue}\n                                                            disabled={!row.isEditable}\n                                                            onChange={(e) => handleChange(index, e)} />\n                                                    </Col>\n                                                    <Col className='col-auto ms-auto'>\n                                                        <Button variant=\"link text-danger\" style={{ padding: \"5px\" }} onClick={() => deleteRow(row, index)}>\n                                                            {_(\"delete\")}\n                                                        </Button>\n                                                        {row.isEditable && row.isFromAPI && (\n                                                            <>\n                                                                <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                                    {_(\"save\")}\n                                                                </Button>\n                                                                <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => cancelEditRow(index)}>\n                                                                    {_(\"cancel\")}\n                                                                </Button>\n                                                            </>\n                                                        )}\n                                                        {row.isEditable && !row.isFromAPI && (\n\n                                                            <Button variant=\"link text-success\" style={{ padding: \"5px\" }} onClick={() => saveRow(row, index)}>\n                                                                {_(\"save\")}\n                                                            </Button>\n                                                        )}\n                                                        {!row.isEditable && (\n                                                            <>\n                                                                <Button variant=\"link text-primary\" style={{ padding: \"5px\" }} onClick={() => editRow(index)}>\n                                                                    {_(\"edit\")}\n                                                                </Button>\n                                                                <a href={'http://' + row.domainValue} target=\"_blank\">\n                                                                    <Button variant=\"link text-primary\" style={{ padding: \"5px\" }}>{_(\"access\")}</Button>\n                                                                </a>\n                                                                {\n                                                                    row.isDefaultDomain ? (\n                                                                        <Badge className=\"ms-2 bg-success\"> {_(\"default\")} </Badge>\n                                                                    ) : (\n                                                                        <Button variant=\"link text-primary\" onClick={() => setDefaultDomain(index)}>\n                                                                            {_(\"set as default\")}\n                                                                        </Button>\n                                                                    )\n                                                                }\n                                                            </>\n                                                        )}\n                                                    </Col>\n                                                </Col>\n                                            </Row>\n                                        ))}\n                                    </Card.Body>\n                                    {/* <Card.Footer>\n                                        <Row className=\"mb-2 mt-2\">\n                                            <Col sm={12}>\n                                                <span>\n                                                    如要需要进行Https设置,或者更多自定义配置，请点击更多\n                                                </span>\n                                                <a href=\"/nginx\" target=\"_parent\" className=\"me-2 float-end\">\n                                                    <Button variant=\"primary\" size=\"sm\">{_(\"More\")}</Button>\n                                                </a>\n                                            </Col>\n                                        </Row>\n                                    </Card.Footer> */}\n                                </Card >\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                    {\n                        (props.data?.config?.url && ((props.data?.config?.default_domain && !props.data?.app_replace_url) || (!props.data?.config?.default_domain))) &&\n                        <Accordion defaultExpanded={true} onChange={handleChangefornodomin} className='mb-2'>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel2a-content\"\n                                id=\"panel2a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">{_(\"No Domain Access\")}</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForNoDomain ? 'inline' : 'none' }}>\n                                        {_(\"No domain name can temporarily access the application by IP + port\")}\n                                    </span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {\n                                                props.data?.config?.url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">{_(\"Front End\")}:</label>\n                                                        <a href={props.data?.config?.url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                            {\n                                                props.data?.config?.admin_url &&\n                                                (\n                                                    <div>\n                                                        <label className=\"me-2 fs-5\">{_(\"Back End\")}:</label>\n                                                        <a href={props.data?.config?.admin_url} target=\"_blank\" className=\"me-2\">\n                                                            {props.data?.config?.admin_url}\n                                                        </a>\n                                                    </div>\n                                                )\n                                            }\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                    {\n                        props.data?.config?.admin_username &&\n                        <Accordion className='mb-2' onChange={handleChangeforaccount}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel3a-content\"\n                                id=\"panel3a-header\"\n                            >\n                                <Typography>\n                                    <label className=\"me-2 fs-5 d-block\">{_(\"Initial Account\")}</label>\n                                    <span className=\"me-2 fs-6\" style={{ display: isExpandedForAccount ? 'inline' : 'none' }}>\n                                        {_(\"This application is pre-configured with an administrator account, please change the administrator password immediately. The initial credentials are:\")}\n                                    </span>\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <Card>\n                                        <Card.Body>\n                                            {/* <p>\n                                                This app is pre-setup with an admin account,Please change the admin password immediately. The initial credentials are:\n                                            </p> */}\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"username\" column md={2} className='fs-5'>\n                                                    {_(\"UserName\")}\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <Form.Control\n                                                        type=\"text\"\n                                                        name=\"username\"\n                                                        id=\"username\"\n                                                        defaultValue={props.data?.config?.admin_username}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n\n                                            <Form.Group as={Row} className=\"mb-3\">\n                                                <Form.Label htmlFor=\"password\" column md={2} className='fs-5'>\n                                                    {_(\"Password\")}\n                                                </Form.Label>\n                                                <Col md={4}>\n                                                    <FormInput\n                                                        type=\"password\"\n                                                        name=\"password\"\n                                                        containerClass={'mb-3'}\n                                                        value={props.data?.config?.admin_password}\n                                                        readOnly\n                                                    />\n                                                </Col>\n                                            </Form.Group>\n                                        </Card.Body>\n                                    </Card>\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    }\n                </Card.Body>\n            </Card >\n            {\n                showRemoveDomain &&\n                <RemoveDomain showConform={showRemoveDomain} onClose={cancelRemoveDomain} deleteRowData={deleteRowData} onDataChange={getDomains} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n}\n\nexport default AppAccess;","import cockpit from \"cockpit\";\nimport React from 'react';\nimport { Badge, Button, Card, Col, Row, Table } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst _ = cockpit.gettext;\n\nconst AppContainer = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const containersInfo = props.containersInfo;\n    const customer_name = props.customer_name;\n    const endpointsId = props.endpointsId;\n\n    //通过Portainer的接口获取容器数据\n    // const getContainersData = async () => {\n    //     try {\n    //         let jwt = window.localStorage.getItem(\"portainer.JWT\"); //获取存储在本地的JWT数据 \n    //         let id = null;\n\n    //         //如果获取不到jwt，则模拟登录并写入新的jwt\n    //         if (jwt === null) {\n    //             const response = await axios.get('./config.json'); //从项目下读取配置文件\n    //             if (response.status === 200) {\n    //                 let config = response.data.PORTAINER;\n    //                 const { PORTAINER_USERNAME, PORTAINER_PASSWORD, PORTAINER_AUTH_URL, PORTAINER_HOME_PAGE } = config;\n\n    //                 //调用portainer的登录API，模拟登录\n    //                 const authResponse = await axios.post(PORTAINER_AUTH_URL, {\n    //                     username: PORTAINER_USERNAME,\n    //                     password: PORTAINER_PASSWORD\n    //                 });\n    //                 if (authResponse.status === 200) {\n    //                     jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n    //                     //jwt = authResponse.data.jwt\n    //                     window.localStorage.setItem('portainer\\.JWT', jwt); //关键是将通过API登录后获取的jwt，存储到本地localStorage\n    //                 } else {\n    //                     console.error('Error:', authResponse);\n    //                 }\n    //             }\n    //             else {\n    //                 console.error('Error:', response);\n    //             }\n    //         }\n\n    //         //从portainer接口获取endpoints\n    //         const endpointsData = await axios.get('/portainer/api/endpoints', {\n    //             headers: {\n    //                 'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n    //             }\n    //         });\n    //         if (endpointsData.status === 200) {\n    //             //先判断是否获取了“本地”endpoint\n    //             if (endpointsData.data.length == 0) { //没有“本地”endpoint\n    //                 //调用添加\"本地\"环境的接口\n    //                 const addEndpoint = await axios.post('/portainer/api/endpoints', {},\n    //                     {\n    //                         params: {\n    //                             Name: \"websoft9-local\",\n    //                             EndpointCreationType: 1\n    //                         },\n    //                         headers: {\n    //                             'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n    //                         }\n    //                     }\n    //                 );\n    //                 if (addEndpoint.status === 200) {\n    //                     id = addEndpoint.data?.Id;\n    //                     setEndpointsId(id);\n    //                 }\n    //                 else {\n    //                     console.error('Error:', addEndpoint);\n    //                 }\n    //             }\n    //             else {\n    //                 //应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\n    //                 id = endpointsData.data.find(({ URL }) => URL.includes('/var/run/docker.sock')).Id;\n    //                 setEndpointsId(id);\n    //             }\n\n    //             //调用接口获取\n    //             const containersData = await axios.get(`/portainer/api/endpoints/${id}/docker/containers/json`, {\n    //                 headers: {\n    //                     'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n    //                 },\n    //                 params: {\n    //                     all: true,\n    //                     filters: JSON.stringify({ \"label\": [`com.docker.compose.project=${customer_name}`] })\n    //                 }\n    //             })\n    //             if (containersData.status === 200) {\n    //                 setContainersInfo(containersData.data);\n    //             }\n    //             else {\n    //                 console.error('Error:', containersData);\n    //             }\n    //         }\n    //         else {\n    //             console.error('Error:', endpointsData);\n    //         }\n    //     }\n    //     catch (error) {\n    //         console.error('Error:', error);\n    //         //navigate(\"/error-500\");\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     getContainersData();\n    // }, []);\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <Row className=\"align-items-center\">\n                            <Col xs={12} md={10}>\n                                <label className=\"me-2 fs-5 d-block\">{_(\"Container\")}</label>\n                                <span className=\"me-2 fs-6\">\n                                    {cockpit.format(_(\"This application consists of the following containers, and the one named $0 is the main container.\"), customer_name)}\n                                </span>\n                            </Col>\n                            <Col xs={12} md={2}>\n                                {/* <a href={`/portainer/#!/${endpointsId}/docker/stacks/${customer_name}?type=2&regular=false&external=true&orphaned=false`}\n                                    target=\"_parent\" className=\"me-2\">\n                                    <Button variant=\"primary\" size=\"sm\" className=\"float-end\">{_(\"More\")}</Button>\n                                </a> */}\n                                <Button variant=\"primary\" size=\"sm\" className=\"float-end me-2\" onClick={() => {\n                                    let url = `container#/portainer/#!/${endpointsId}/docker/stacks/${customer_name}?type=2&regular=false&external=true&orphaned=false`;\n                                    cockpit.file('/etc/hostname').watch(content => {\n                                        console.log(content);\n                                    });\n                                    cockpit.jump(url);\n                                }}>{_(\"More\")}</Button>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table className=\"mb-0\">\n                            <thead>\n                                <tr>\n                                    <th>{_(\"Name\")}</th>\n                                    <th>{_(\"State\")}</th>\n                                    <th style={{ textAlign: 'center' }}>{_(\"Actions\")}</th>\n                                    <th>{_(\"Image\")}</th>\n                                    <th>{_(\"Created\")}</th>\n                                    <th>{_(\"Ip Address\")}</th>\n                                    <th>{_(\"Published Ports\")}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {containersInfo.map((container, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{container.Names?.[0]?.replace(/^\\/|\\/$/g, '')}</td>\n                                            <td>\n                                                <Badge className={`${container.State === 'running' ? 'bg-success' : container.State === 'exited' ? 'bg-danger' : 'info'}`}>\n                                                    {container.State}\n                                                </Badge>\n                                            </td>\n                                            <td style={{ textAlign: 'center' }}>\n                                                <a href=\"#\" onClick={(e) => {\n                                                    e.preventDefault();\n                                                    let url = `container#/portainer/#!/${endpointsId}/docker/containers/${container.Id}/logs`;\n                                                    cockpit.file('/etc/hostname').watch(content => {\n                                                        console.log(content);\n                                                    });\n                                                    cockpit.jump(url);\n                                                }}\n                                                    title='Logs'>\n                                                    <i className=\"dripicons-document-remove noti-icon\"></i>{' '}\n                                                </a>\n                                                {\n                                                    container.State === \"running\" && (\n                                                        <a href=\"#\" onClick={(e) => {\n                                                            e.preventDefault();\n                                                            let url = `container#/portainer/#!/${endpointsId}/docker/containers/${container.Id}/stats`;\n                                                            cockpit.file('/etc/hostname').watch(content => {\n                                                                console.log(content);\n                                                            });\n                                                            cockpit.jump(url);\n                                                        }} title='Stats'>\n                                                            <i className=\"dripicons-graph-bar noti-icon\"></i>{' '}\n                                                        </a>\n                                                    )\n                                                }\n                                                {\n                                                    container.State === \"running\" && (\n                                                        <a href=\"#\" onClick={(e) => {\n                                                            e.preventDefault();\n                                                            let url = `container#/portainer/#!/${endpointsId}/docker/containers/${container.Id}/exec`;\n                                                            cockpit.file('/etc/hostname').watch(content => {\n                                                                console.log(content);\n                                                            });\n                                                            cockpit.jump(url);\n                                                        }} title='Exec Console'>\n                                                            <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                                        </a>\n                                                    )\n                                                }\n                                            </td>\n                                            <td>{container.Image}</td>\n                                            <td>{new Date(container.Created * 1000).toLocaleString()}</td>\n                                            <td>{container.NetworkSettings.Networks[container.HostConfig.NetworkMode].IPAddress}</td>\n                                            <td>{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PublicPort}:{container.Ports.find(port => port.IP && /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(port.IP))?.PrivatePort}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row >\n    );\n}\n\nexport default AppContainer;","import cockpit from \"cockpit\";\nimport React from 'react';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\n\nconst _ = cockpit.gettext;\n\nconst AppOverview = (props): React$Element<React$FragmentType> => {\n    return (\n        <Row>\n            <Col xs={12}>\n                <Card>\n                    <Card.Header>\n                        <label className=\"me-2 fs-5 d-block\">{_(\"App Overview\")}</label>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table responsive className=\"mb-0\" bordered={false} style={{ display: 'flex' }}>\n                            <tbody>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"App Name\")}:</td>\n                                    <td>{props.data?.app_name}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"App Version\")}:</td>\n                                    <td>{props.data?.app_version}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"App Port\")}:</td>\n                                    <td>{props.data?.config?.port}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"Created Time\")}:</td>\n                                    <td>{props.data?.create_time}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"Config Path\")}:</td>\n                                    <td>{props.data?.config_path}</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ fontWeight: \"bold\" }}>{_(\"Data Path\")}:</td>\n                                    <td>{props.data?.volume_data}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n\nexport default AppOverview;","import classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { Alert, Button, Col, Modal, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from '../../components/Spinner';\nimport { AppStart, AppStop, AppUninstall } from '../../helpers';\n\nconst _ = cockpit.gettext;\n\n//卸载应用时的确定/取消弹窗\nconst UninstallConform = (props) => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭弹窗\n        props.onClose();\n        props.onCloseFatherModal();\n\n        //更新主页APP的数据\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }}>\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Uninstall\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately uninstall\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Uninstall\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//卸载应用选项卡\nconst Uninstall = forwardRef((props, ref): React$Element<React$FragmentType> => {\n    const [showUninstallConform, setShowUninstallConform] = useState(false);//用于确认卸载弹窗的标识\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const navigate = useNavigate(); //用于页面跳转\n\n    //用于显示确定/取消卸载应用的弹窗\n    const handleClick = () => {\n        setShowUninstallConform(true);\n    };\n    //用于关闭确定/取消卸载应用的弹窗\n    const handleClose = () => {\n        setShowUninstallConform(false);\n    };\n\n    //设置按钮禁用\n    const setButtonDisable = () => {\n        setDisable(true);\n    };\n\n    //设置按钮启用\n    const setButtonEnable = () => {\n        setDisable(false);\n    };\n\n    //提供给父组件调用的方法，用于在父组件中调用子组件的方法\n    useImperativeHandle(ref, () => ({\n        setButtonDisable,\n        setButtonEnable,\n    }));\n\n    return (\n        <>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Start / Stop\")}</label>\n                    <p>\n                        {_(\"Apps can be stopped to conserve server resources instead of uninstalling.\")}\n                    </p>\n                    {props.data.status === \"running\" ?\n                        <Button variant=\"secondary\" className=\"float-end\" disabled={disable} onClick={async () => {\n                            try {\n                                props.disabledButton();\n                                setDisable(true);\n                                //调用应用停止接口\n                                const response = await AppStop({ app_id: props.data.app_id });\n                                if (response.Error) {\n                                    navigate(\"/error\")\n                                }\n                                else {\n                                    props.onDataChange(props.data.app_id);\n                                }\n                            }\n                            catch (error) {\n                                navigate(\"/error-500\");\n                            }\n                            finally {\n                                setDisable(false);\n                                props.enableButton();\n                            }\n                        }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Stop\")}\n                        </Button>\n                        :\n                        <Button variant=\"primary\" className=\"float-end\" disabled={disable}\n                            onClick={async () => {\n                                props.disabledButton();\n                                setDisable(true);\n                                try {\n                                    const response = await AppStart({ app_id: props.data.app_id });\n                                    if (response.Error) {\n                                        navigate(\"/error\")\n                                    }\n                                    else {\n                                        props.onDataChange(props.data.app_id);\n                                    }\n                                }\n                                catch (error) {\n                                    navigate(\"/error-500\");\n                                }\n                                finally {\n                                    props.enableButton();\n                                    setDisable(false);\n                                }\n                            }}>\n                            {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Start\")}\n                        </Button>\n                    }\n                </Col>\n            </Row>\n            <hr></hr>\n            <Row className=\"mb-2\">\n                <Col sm={12}>\n                    <label className=\"me-1\" style={{ fontWeight: \"bolder\", marginBottom: \"5px\" }}>{_(\"Uninstall\")}</label>\n                    <p>\n                        {_(\"This will uninstall the app immediately and remove all its data.The app will be inaccessible.\")}\n                    </p>\n                    <Button variant=\"warning\" className=\"float-end\" onClick={() => { handleClick() }} >\n                        {_(\"Uninstall\")}\n                    </Button>\n                </Col>\n            </Row>\n            {showUninstallConform && <UninstallConform showConform={showUninstallConform} onClose={handleClose}\n                app={props.data} onDataChange={props.onDataChange} onCloseFatherModal={props.onCloseFatherModal} />}\n        </>\n    );\n});\n\nexport default Uninstall;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport axios from 'axios';\nimport classnames from \"classnames\";\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Modal, Nav, OverlayTrigger, Row, Tab, Tooltip } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport Spinner from '../components/Spinner';\nimport { AppRestart, AppSearchUsers, AppStart, AppStop } from '../helpers';\nimport AppAccess from './appdetailtabs/appaccess';\nimport AppContainer from './appdetailtabs/appcontainer';\nimport AppOverview from './appdetailtabs/appoverview';\nimport Uninstall from './appdetailtabs/appuninstall';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst AppDetailModal = (props): React$Element<React$FragmentType> => {\n    const [restartDisable, setRestartDisable] = useState(false);//用于重启按钮的按钮禁用\n    const [buttonDisable, setButtonDisable] = useState(false); //用于启动/停止按钮禁用\n    const [currentApp, setCurrentApp] = useState(props.current_app);\n    const [startAppLoading, setStartAppLoading] = useState(false); //用户显示启动应用的加载状态\n    const [stopAppLoading, setStopAppLoading] = useState(false); //用户显示停止时应用的加载状态\n    const [restartAppLoading, setRestartAppLoading] = useState(false); //用户显示重启时应用的加载状态\n    const navigate = useNavigate(); //用于页面跳转\n    const childRef = useRef();\n    const [containersInfo, setContainersInfo] = useState([]);\n    const customer_name = props.current_app.customer_name;\n    const [endpointsId, setEndpointsId] = useState(null);\n    const [mainContainerId, setMainContainerId] = useState(null);\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");  //用于确定弹窗的类型：error\\success\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //通过Portainer的接口获取容器数据\n    const getContainersData = async () => {\n        try {\n            var protocol = window.location.protocol;\n            var host = window.location.host;\n            var baseURL = protocol + \"//\" + (/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/.test(host) ? host.split(\":\")[0] : host);\n\n            var jwt = window.localStorage.getItem(\"portainer.JWT\"); //获取存储在本地的JWT数据 \n            var id = null;\n\n            //如果获取不到jwt，则模拟登录并写入新的jwt\n            if (jwt === null) {\n                var response = await AppSearchUsers({ \"plugin_name\": \"portainer\" });\n                response = JSON.parse(response);\n                if (response.Error) {\n                    throw new Error(\"Request portainer user info failed.\");\n                }\n                else {\n                    axios.post(baseURL + \"/portainer/api/auth\", {\n                        username: response.ResponseData.user?.user_name,\n                        password: response.ResponseData.user?.password\n                    }).then((authResponse) => {\n                        if (authResponse.status === 200) {\n                            jwt = \"\\\"\" + authResponse.data.jwt + \"\\\"\";\n                            window.localStorage.setItem('portainer\\.JWT', jwt);\n                        } else {\n                            throw new Error(\"Request portainer tokens failed.\");\n                        }\n                    });\n                }\n            }\n\n            //从portainer接口获取endpoints\n            axios.get(baseURL + '/portainer/api/endpoints', {\n                headers: {\n                    'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n                }\n            }).then((endpointsData) => {\n                if (endpointsData.status === 200) {\n                    //先判断是否获取了“本地”endpoint\n                    if (endpointsData.data.length == 0) { //没有“本地”endpoint\n                        //调用添加\"本地\"环境的接口\n                        axios.post(baseURL + '/portainer/api/endpoints', {},\n                            {\n                                params: {\n                                    Name: \"local\",\n                                    EndpointCreationType: 1\n                                },\n                                headers: {\n                                    'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n                                }\n                            }\n                        ).then((addEndpoint) => {\n                            if (addEndpoint.status === 200) {\n                                id = addEndpoint.data?.Id;\n                                setEndpointsId(id);\n                            }\n                            else {\n                                throw new Error(\"Request portainer addEndpoint failed.\");\n                            }\n                        })\n                    }\n                    else {\n                        //应该可能会返回“远程”的endpoint，这里只获取“本地”endpoint,条件为URL包含'/var/run/docker.sock'\n                        id = endpointsData.data.find(({ URL }) => URL.includes('/var/run/docker.sock')).Id;\n                        setEndpointsId(id);\n                    }\n\n                    //调用Portainer接口获取容器数据\n                    axios.get(baseURL + `/portainer/api/endpoints/${id}/docker/containers/json`, {\n                        headers: {\n                            'Authorization': 'Bearer ' + jwt.replace(/\"/g, '')\n                        },\n                        params: {\n                            all: true,\n                            filters: JSON.stringify({ \"label\": [`com.docker.compose.project=${customer_name}`] })\n                        }\n                    }).then((containersData) => {\n                        if (containersData.status === 200) {\n                            const data = containersData.data;\n                            const id = data.find(container => container.Names?.[0]?.replace(/^\\/|\\/$/g, '') === customer_name)?.Id;\n                            setMainContainerId(id);\n                            setContainersInfo(data);\n                        }\n                        else {\n                            throw new Error(\"Request portainer containersData failed.\");\n                        }\n                    })\n                }\n                else {\n                    throw new Error(\"Request portainer endpointsData failed.\");\n                }\n            })\n        }\n        catch (error) {\n            setShowAlert(true);\n            setAlertType(\"error\")\n            setAlertMessage(error);\n        }\n    }\n\n    //设置卸载页面的按钮禁用\n    const setUninstallButtonDisable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonDisable();\n    };\n\n    //设置卸载页面的按钮启用\n    const setUninstallButtonEnable = () => {\n        // 通过ref调用子组件的方法\n        childRef.current.setButtonEnable();\n    };\n\n    //设置启动/停止按钮禁用,用于传递给卸载页面\n    const setAppdetailButtonDisable = () => {\n        setButtonDisable(true);\n        setRestartDisable(true);\n    };\n    //设置启动/停止按钮启用,用于传递给卸载页面\n    const setAppdetailButtonEnable = () => {\n        setButtonDisable(false);\n        setRestartDisable(false);\n    };\n\n    useEffect(() => {\n        setCurrentApp(props.current_app);\n    }, [props.current_app]);\n\n    useEffect(() => {\n        getContainersData();\n    }, []);\n\n    const tabContents = [\n        {\n            id: '1',\n            title: _(\"Overview\"),\n            icon: 'mdi dripicons-home',\n            text: <AppOverview data={currentApp} />,\n        },\n        {\n            id: '2',\n            title: _(\"Access\"),\n            icon: 'mdi dripicons-web',\n            text: <AppAccess data={currentApp} />,\n        },\n        {\n            id: '3',\n            title: _(\"Container\"),\n            icon: 'mdi dripicons-stack',\n            text: <AppContainer customer_name={customer_name} endpointsId={endpointsId} containersInfo={containersInfo} />,\n        },\n        // {\n        //     id: '4',\n        //     title: _(\"Terminal\"),\n        //     icon: 'mdi dripicons-stack',\n        //     text: <AppTerminal endpointsId={endpointsId} containerId={mainContainerId} />\n        // },\n        {\n            id: '5',\n            title: _(\"Uninstall\"),\n            icon: 'mdi mdi-cog-outline',\n            text: <Uninstall data={currentApp} ref={childRef} disabledButton={setAppdetailButtonDisable} enableButton={setAppdetailButtonEnable}\n                onDataChange={props.onDataChange} onCloseFatherModal={props.onClose} />,\n        },\n    ];\n\n    return (\n        <>\n            <Modal show={props.showFlag} backdrop=\"static\" onHide={props.onClose} size=\"lg\" scrollable=\"true\" dialogClassName=\"modal-full-width\" >\n                <Modal.Header onHide={props.onClose} closeButton>\n                    <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\n                        <div className='appstore-item-content-icon col-same-height'>\n                            <img\n                                src={`./static/logos/${currentApp.app_name}-websoft9.png`}\n                                alt={currentApp.app_name}\n                                className=\"app-icon\"\n                                onError={(e) => (e.target.src = DefaultImg)}\n                            />\n                        </div>\n                        <div className='col-same-height'>\n                            <h4 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                                {currentApp.customer_name}\n                            </h4>\n                            <h5 className=\"appstore-item-content-title\" style={{ marginTop: \"5px\" }}>\n                                {currentApp.status}\n                            </h5>\n                        </div>\n                        <div className='col-same-height' style={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n                            {\n                                currentApp.status === \"exited\" &&\n                                <OverlayTrigger\n                                    key=\"bottom1\"\n                                    placement=\"bottom\"\n                                    overlay={\n                                        <Tooltip id=\"tooltip-bottom\">\n                                            {_(\"Start App\")}\n                                        </Tooltip>\n                                    }>\n                                    <Button variant=\"primary\" disabled={buttonDisable}\n                                        style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                        onClick={async () => {\n                                            setUninstallButtonDisable();\n                                            setStartAppLoading(true);\n                                            setRestartDisable(true);\n                                            try {\n                                                const response = await AppStart({ app_id: currentApp.app_id });\n                                                if (response.Error) {\n                                                    navigate(\"/error\")\n                                                }\n                                                else {\n                                                    props.onDataChange();\n                                                    //getContainersData(); //刷新容器数据\n                                                }\n                                            }\n                                            catch (error) {\n                                                navigate(\"/error-500\");\n                                            }\n                                            finally {\n                                                setUninstallButtonEnable();\n                                                setStartAppLoading(false);\n                                                setRestartDisable(false);\n                                            }\n                                        }}\n                                    >\n                                        {\n                                            startAppLoading ?\n                                                <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                                :\n                                                <i className=\"dripicons-media-play noti-icon\"></i>\n                                        }\n                                    </Button>\n                                </OverlayTrigger>\n                            }\n                            {\n                                currentApp.status === \"running\" &&\n                                <OverlayTrigger\n                                    key=\"bottom2\"\n                                    placement=\"bottom\"\n                                    overlay={\n                                        <Tooltip id=\"tooltip-bottom\">\n                                            {_(\"Stop App\")}\n                                        </Tooltip>\n                                    }>\n                                    <Button variant=\"primary\" disabled={buttonDisable}\n                                        style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                        onClick={async () => {\n                                            setUninstallButtonDisable();\n                                            setStopAppLoading(true);\n                                            setRestartDisable(true);\n                                            try {\n                                                const response = await AppStop({ app_id: currentApp.app_id });\n                                                if (response.Error) {\n                                                    navigate(\"/error\");\n                                                }\n                                                else {\n                                                    props.onDataChange();\n                                                    //getContainersData(); //刷新容器数据\n                                                }\n                                            }\n                                            catch (error) {\n                                                navigate(\"/error-500\");\n                                            }\n                                            finally {\n                                                setUninstallButtonEnable();\n                                                setStopAppLoading(false);\n                                                setRestartDisable(false);\n                                            }\n                                        }}\n                                    >\n                                        {\n                                            stopAppLoading ?\n                                                <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                                :\n                                                <i className=\"dripicons-power noti-icon\"></i>\n                                        }\n                                    </Button>\n                                </OverlayTrigger>\n                            }\n                            <OverlayTrigger\n                                key=\"bottom3\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Restart App\")}\n                                    </Tooltip>\n                                }>\n                                <Button disabled={restartDisable}\n                                    style={{ padding: \"5px 10px\", borderRadius: \"3px\", marginRight: \"10px\" }}\n                                    onClick={async () => {\n                                        try {\n                                            setUninstallButtonDisable();\n                                            setRestartAppLoading(true);\n                                            setButtonDisable(true);\n                                            const response = await AppRestart({ app_id: currentApp.app_id });\n                                            if (response.Error) {\n                                                navigate(\"/error\");\n                                            }\n                                            else {\n                                                props.onDataChange();\n                                                //getContainersData(); //刷新容器数据\n                                            }\n                                        }\n                                        catch (error) {\n                                            navigate(\"/error-500\");\n                                        }\n                                        finally {\n                                            setUninstallButtonEnable();\n                                            setRestartAppLoading(false);\n                                            setButtonDisable(false);\n                                        }\n                                    }}\n                                >\n                                    {\n                                        restartAppLoading ?\n                                            <Spinner className=\"spinner-border-sm noti-icon\" color=\"light\" />\n                                            :\n                                            <i className=\"dripicons-clockwise noti-icon\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                            {/* {\n                            currentApp.status === \"running\" &&\n                            <OverlayTrigger\n                                key=\"bottom4\"\n                                placement=\"bottom\"\n                                overlay={\n                                    <Tooltip id=\"tooltip-bottom\">\n                                        {_(\"Terminal\")}\n                                    </Tooltip>\n                                }>\n                                <Link to={{ pathname: '/terminal', search: `?id=${currentApp.customer_name}` }}\n                                    style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                    target=\"_blank\">\n                                    <i className=\"dripicons-code noti-icon\"></i>{' '}\n                                </Link>\n                            </OverlayTrigger>\n                        } */}\n                            {\n                                <OverlayTrigger\n                                    key=\"bottom5\"\n                                    placement=\"bottom\"\n                                    overlay={\n                                        <Tooltip id=\"tooltip-bottom\">\n                                            {_(\"Documentation\")}\n                                        </Tooltip>\n                                    }>\n                                    <a href={'https://support.websoft9.com/docs/' + currentApp.app_name}\n                                        style={{ color: \"#fff\", backgroundColor: \"#727cf5\", padding: \"5px 10px\", borderRadius: \"3px\", borderColor: \"#727cf5\", marginRight: \"10px\" }}\n                                        target=\"_blank\">\n                                        <i className=\"dripicons-document noti-icon\"></i>{' '}\n                                    </a>\n                                </OverlayTrigger>\n                            }\n                        </div>\n                    </div>\n                </Modal.Header>\n                <Modal.Body className=\"row\">\n                    <Tab.Container defaultActiveKey={_(\"Overview\")}>\n                        <Col sm={2} className=\"mb-2 mb-sm-0\">\n                            <Nav variant=\"pills\" className=\"flex-column\">\n                                {tabContents.map((tab, index) => {\n                                    const renderElement = () => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    }\n                                    if (tab.title === \"Terminal\") {\n                                        if (currentApp.status === \"running\") {\n                                            return renderElement();\n                                        }\n                                    } else {\n                                        return renderElement();\n                                    }\n                                })}\n                            </Nav>\n                        </Col>\n                        <Col sm={10}>\n                            <Tab.Content style={{ height: \"100%\" }}>\n                                {tabContents.map((tab, index) => {\n                                    return (\n                                        <Tab.Pane eventKey={tab.title} id={tab.id} key={index} style={{ height: \"100%\" }}>\n                                            <Row style={{ height: \"100%\" }}>\n                                                <Col sm=\"12\" /*style={{ height: tab.title === \"Terminal\" ? \"600px\" : \"\" }}*/>\n                                                    {tab.text}\n                                                </Col>\n                                            </Row>\n                                        </Tab.Pane>\n                                    );\n                                })}\n                            </Tab.Content>\n                        </Col>\n                    </Tab.Container>\n                    {\n                        showAlert &&\n                        <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                            <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                                {alertMessage}\n                            </MyMuiAlert>\n                        </Snackbar>\n                    }\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default AppDetailModal;","import MuiAlert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport classNames from 'classnames';\nimport cockpit from 'cockpit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Col, Dropdown, Modal, Row } from 'react-bootstrap';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport DefaultImg from '../assets/images/default.png';\nimport FormInput from '../components/FormInput';\nimport Spinner from '../components/Spinner';\nimport { AppList, AppRestart, AppStart, AppStop, AppUninstall } from '../helpers';\nimport AppDetailModal from './appdetail';\n\nconst _ = cockpit.gettext;\n\nconst MyMuiAlert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//应用状态为failed时，显示错误消息\nconst ErrorInfoModal = (props): React$Element<React$FragmentType> => {\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\" scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} closeButton className={classNames('modal-colored-header', 'bg-danger')}>\n                <h4>{_(\"This is the error message for\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                {\n                    props.app.status_reason &&\n                    <>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Code: \")}</b>{props.app.status_reason.Code} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Message: \")}</b>{props.app.status_reason.Message} </span>\n                        <span style={{ margin: \"10px 0px\" }}> <b>{_(\"Detail: \")}</b>{props.app.status_reason.Detail} </span>\n                    </>\n                }\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>\n                <Button variant=\"light\" onClick={() => window.open('https://www.websoft9.com/ticket', '_blank')}>\n                    {_(\"Support\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\n//删除应用弹窗\nconst UninstallConform = (props): React$Element<React$FragmentType> => {\n    const navigate = useNavigate(); //用于页面跳转\n    const [disable, setDisable] = useState(false);//用于按钮禁用\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n\n    function closeAllModals() {\n        //关闭所有弹窗\n        props.onClose();\n        props.onDataChange();\n    }\n\n    return (\n        <Modal show={props.showConform} onHide={props.onClose} size=\"lg\"\n            scrollable=\"true\" backdrop=\"static\">\n            <Modal.Header onHide={props.onClose} className={classNames('modal-colored-header', 'bg-warning')}>\n                <h4>{_(\"Remove\")} {props.app.customer_name}</h4>\n            </Modal.Header>\n            <Modal.Body className=\"row\" >\n                <span style={{ margin: \"10px 0px\" }}>{_(\"This will immediately remove\")} {props.app.customer_name} {_(\"and remove all its data.\")}</span>\n                <div>\n                    {showAlert && <Alert variant=\"danger\" className=\"my-2\">\n                        {alertMessage}\n                    </Alert>}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={props.onClose}>\n                    {_(\"Close\")}\n                </Button>{\" \"}\n                <Button disabled={disable} variant=\"warning\" onClick={async () => {\n                    try {\n                        setDisable(true);\n                        //调用卸载应用接口\n                        const response = await AppUninstall({ app_id: props.app.app_id });\n                        if (response.data.Error) {\n                            setShowAlert(true);\n                            setAlertMessage(response.data.Error.Message);\n                        }\n                        else {\n                            closeAllModals(); //关闭弹窗并更新数据\n                        }\n                    }\n                    catch (error) {\n                        navigate(\"/error-500\");\n                    }\n                }}>\n                    {disable && <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />} {_(\"Remove\")}\n                </Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nconst MyApps = (): React$Element<React$FragmentType> => {\n    const [showModal, setShowModal] = useState(false); //用于显示状态为running或exited弹窗的标识\n    const [showUninstallConform, setShowUninstallConform] = useState(false); //用于显示状态为failed时显示确定删除的弹窗\n    const [showErrorInfo, setShowErrorInfo] = useState(false); //用于显示状态为failed时显示错误消息的弹窗\n    const [showOtherAppModal, setShowOtherAppModal] = useState(false); //用于显示非websoft9应用的的弹窗的标识\n    const [isLoading, setIsLoading] = useState(false); //用于非官方应用启动 停止 重启 卸载时，显示加载中\n    const [showAlert, setShowAlert] = useState(false); //用于是否显示错误提示\n    const [alertMessage, setAlertMessage] = useState(\"\");//用于显示错误提示消息\n    const [alertType, setAlertType] = useState(\"\");//用于确定弹窗的类型：error\\success\n\n    const [selectedApp, setSelectedApp] = useState(null); //用于存储被选中的产品（点击应用详情时使用）\n    const [apps, setApps] = useState([]); //所有“我的应用”\n    const [statusApps, setStatusApps] = useState([]);//根据状态筛选的应用\n    const [searchString, setSearchString] = useState(\"\");//用户输入的筛选字符串\n    const [selectedStatus, setSelectedStatus] = useState(\"all\"); //用于存储用户筛选应用状态的标识\n    const [progressId, setProgressId] = useState([]); //用于存储当前正在安装的应用ID，用于做进度查询的参数\n\n    const selectedAppRef = useRef(selectedApp);\n    const navigate = useNavigate(); //用于页面跳转\n\n    const [code, setCode] = useState(0);\n    const [error, setError] = useState(null);\n    const [errorDetails, setErrorDetails] = useState(null)\n    const [loading, setLoading] = useState(false);\n\n    const menuItems = (appStatus) => {\n        return [\n            { label: 'Stop', icon: 'dripicons-power noti-icon', condition: appStatus === \"running\" },\n            { label: 'Start', icon: 'dripicons-media-play noti-icon', condition: appStatus === \"exited\" },\n            { label: 'Restart', icon: 'dripicons-clockwise noti-icon', condition: appStatus === \"running\" || appStatus === \"exited\" },\n            {\n                label: 'Uninstall',\n                icon: 'dripicons-trash noti-icon',\n                variant: 'text-danger',\n                hasDivider: true,\n                condition: true\n            }\n        ]\n    };\n\n    let timer;\n\n    //获取所有已安装的App(只执行一次)\n    const getAllAppsOnce = () => {\n        AppList().then((response) => {\n            response = JSON.parse(response);\n            if (response.Error) {\n                setCode(response.Error.Code);\n                setError(response.Error.Message);\n                setErrorDetails(response.Error.Details);\n            }\n            else {\n                const newApps = response.ResponseData;\n                setApps(newApps);\n                if (selectedAppRef.current) {\n                    const updatedApp = newApps.find(\n                        (app) => app.app_id === selectedAppRef.current.app_id\n                    );\n                    setSelectedApp(updatedApp);\n                }\n            }\n            setLoading(false);\n        }).catch((error) => {\n            <Navigate to=\"/error-500\" />\n        });\n    }\n\n    //获取所有已安装的App(每隔5秒执行一次)\n    const getAllApps = () => {\n        setLoading(true);\n        //调用接口获取已经安装应用\n        timer = setInterval(() => {\n            AppList().then((response) => {\n                response = JSON.parse(response);\n                if (response.Error) {\n                    setCode(response.Error.Code);\n                    setError(response.Error.Message);\n                    setErrorDetails(response.Error.Details);\n                }\n                else {\n                    const newApps = response.ResponseData;\n                    setApps(newApps);\n                    if (selectedAppRef.current) {\n                        const updatedApp = newApps.find(\n                            (app) => app.app_id === selectedAppRef.current.app_id\n                        );\n                        setSelectedApp(updatedApp);\n                    }\n                }\n                setLoading(false);\n            }).catch((error) => {\n                <Navigate to=\"/error-500\" />\n            });\n        }, 5000);\n        return () => clearInterval(timer);\n    }\n\n    useEffect(() => {\n        getAllAppsOnce();\n    }, []);\n\n    useEffect(() => {\n        getAllApps();\n    }, []);\n\n    useEffect(() => {\n        selectedAppRef.current = selectedApp;\n    }, [selectedApp]);\n\n    useEffect(() => {\n        return () => clearInterval(timer);  //用于清除定时器\n    }, []);\n\n    if (loading) return <Spinner className='dis_mid' />;\n    if (code) return <p>Code : ${code} </p>;\n    if (error) return <p>Error : ${error} </p>;\n\n    //用于根据应用“状态”过滤应用\n    const changeStatus = (selectedStatus) => {\n        setSelectedStatus(selectedStatus);\n    };\n\n    //用于根据用户输入搜索应用\n    const handleInputChange = (searchString) => {\n        setSearchString(searchString);\n    }\n\n    //用于用户点击应用详情\n    const handleClick = (app) => {\n        if (app.status === \"running\" || app.status === \"exited\") {\n            setSelectedApp(app);\n            setShowModal(true);\n        }\n    };\n\n    //用于应用为failed时删除应用\n    const deleteApp = (app) => {\n        setSelectedApp(app);\n        setShowUninstallConform(true);\n    };\n\n    //用于应用为failed时显示错误信息弹窗\n    const showError = (app) => {\n        setSelectedApp(app);\n        setShowErrorInfo(true);\n    };\n\n    //用于关闭显示错误消息弹窗\n    const cancelShowError = () => {\n        setShowErrorInfo(false);\n    };\n\n    //用于取消删除应用\n    const canceldeleteApp = () => {\n        setShowUninstallConform(false);\n    };\n\n    //用于关闭应用详情的弹窗\n    const handleClose = () => {\n        setShowModal(false);\n        setSelectedApp(null);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setShowAlert(false);\n        setAlertMessage(\"\");\n    };\n\n    //用于立即刷新数据\n    const handleDataChange = () => {\n        getAllAppsOnce();\n    };\n\n    //非官方应用的操作\n    const appActions = {\n        \"Stop\": {\n            api: AppStop,\n        },\n        \"Start\": {\n            api: AppStart,\n        },\n        \"Restart\": {\n            api: AppRestart,\n        },\n        \"Uninstall\": {\n            api: AppUninstall,\n        }\n    }\n\n    //处理非官方应用的操作\n    const NoOfficialAppClick = async (label, app) => {\n        if (label === \"Uninstall\") {\n            setSelectedApp(app);\n            setShowUninstallConform(true);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await appActions[label].api({ app_id: app.app_id });\n            if (response.data.Error) {\n                setShowAlert(true);\n                setAlertType(\"error\")\n                setAlertMessage(response.data.Error.Message);\n            }\n            else {\n                setShowAlert(true);\n                setAlertType(\"success\")\n                setAlertMessage(_(\"Success\"));\n                handleDataChange();\n            }\n        }\n        catch (error) {\n            navigate(\"/error-500\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"mb-2 align-items-center\">\n                <Col xs={12} sm={6} md={3} lg={2}>\n                    <span style={{ fontSize: \"28px\" }}>{_(\"My Apps\")}</span>\n                </Col>\n                <Col xs={12} sm={6} md={3} lg={2}>\n                    <FormInput\n                        value={selectedStatus}\n                        name=\"select\"\n                        type=\"select\"\n                        className=\"form-select\"\n                        key=\"select\"\n                        onChange={(e) => changeStatus(e.target.value)}\n                    >\n                        <option value=\"all\">{_(\"All States\")}</option>\n                        <option value=\"installing\">installing</option>\n                        <option value=\"running\">running</option>\n                        <option value=\"exited\">exited</option>\n                        <option value=\"restarting\">restarting</option>\n                        <option value=\"failed\">failed</option>\n                    </FormInput>\n                </Col>\n                <Col xs={12} sm={12} md={6} lg={7}>\n                    <FormInput\n                        type=\"text\"\n                        name=\"search\"\n                        placeholder={_(\"Search for apps like WordPress, MySQL, GitLab, …\")}\n                        onChange={(e) => handleInputChange(e.target.value)}\n                    />\n                </Col>\n                <Col xs={12} sm={12} md={12} lg={1}>\n                    <Button\n                        variant=\"primary\"\n                        className=\"float-end\"\n                        onClick={() => {\n                            window.location.reload(true);\n                        }}\n                    >\n                        {_(\"Refresh\")}\n                    </Button>\n                </Col>\n            </Row>\n\n            {\n                [true, false].map((official_app) => {\n                    // 过滤出符合条件的apps\n                    const filteredApps = apps.filter((app) => selectedStatus === 'all' || app.status === selectedStatus)\n                        .filter((app) => app.official_app === official_app)\n                        .filter((app) => app.customer_name.includes(searchString));\n                    // 如果有数据，返回一个Row组件，否则返回null\n                    return filteredApps.length > 0 ? (\n                        <Row>\n                            {/* 根据official_app的值显示不同的标题 */}\n                            <h4 style={official_app ? {} : { paddingTop: \"10px\" }}>{official_app ? _(\"Websoft9's Apps\") : _(\"Other Apps\")}</h4>\n                            {filteredApps.map((app, i) => {\n                                return (\n                                    <Col xxl={2} md={3} key={app.app_id + i} className=\"appstore-item\">\n                                        <div className='appstore-item-content highlight text-align-center' onClick={() => { handleClick(app) }}>\n                                            {\n                                                (!official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                                <Dropdown className=\"float-end\">\n                                                    <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                                                        {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : <i className=\"dripicons-gear noti-icon\" />}\n                                                    </Dropdown.Toggle>\n                                                    <Dropdown.Menu align=\"end\">\n                                                        {(menuItems(app.status) || []).map((item, index) => {\n                                                            return (\n                                                                <React.Fragment key={index}>\n                                                                    {item.condition && item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                                                    {\n                                                                        item.condition && <Dropdown.Item className={classNames(item.variant ? item.variant : '')}\n                                                                            onClick={() => NoOfficialAppClick(item.label, app)}\n                                                                        >\n                                                                            {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                                                            {/* {isLoading ? <Spinner className=\"spinner-border-sm noti-icon\" /> : item.icon && <i className={classNames(item.icon, 'me-1')}></i>} */}\n                                                                            {item.label}\n                                                                        </Dropdown.Item>\n                                                                    }\n                                                                </React.Fragment>\n                                                            );\n                                                        })}\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            }\n                                            {\n                                                (official_app && (app.status === \"running\" || app.status === \"exited\")) &&\n                                                <>\n                                                    <div className=\"float-end arrow-none card-drop p-0\" onClick={() => { handleClick(app) }}>\n                                                        <i className=\"dripicons-gear noti-icon\"></i>\n                                                    </div>\n                                                    <div className=\"clearfix\"></div>\n                                                </>\n                                            }\n                                            {\n                                                (official_app && app.status === \"installing\") &&\n                                                <>\n                                                    <div className=\"float-end arrow-none card-drop p-0\">\n                                                        <i className=\"dripicons-empty noti-icon\"></i>\n                                                    </div>\n                                                    <div className=\"clearfix\"></div>\n                                                </>\n                                            }\n                                            {\n                                                app.status === 'failed' &&\n                                                <>\n                                                    <div className=\"float-end arrow-none card-drop p-0\" >\n                                                        <i className=\"dripicons-information noti-icon\" style={{ paddingRight: \"10px\" }} onClick={() => { showError(app) }}></i>\n                                                        <i className=\"dripicons-trash noti-icon\" onClick={() => { deleteApp(app) }}></i>\n                                                    </div>\n                                                    <div className=\"clearfix\"></div>\n                                                </>\n                                            }\n                                            <div>\n                                                <img\n                                                    src={`./static/logos/${app.app_name}-websoft9.png`}\n                                                    alt={app.app_name}\n                                                    className=\"app-icon\"\n                                                    style={{ margin: \"20px 10px 20px 10px\" }}\n                                                    onError={(e) => (e.target.src = DefaultImg)}\n                                                />\n                                            </div>\n                                            <div>\n                                                <h3 className=\"appstore-item-content-title\" style={{ color: \"#2196f3\" }}>\n                                                    {app.customer_name}\n                                                </h3>\n                                                <div style={{ color: app.status === 'failed' ? 'red' : 'inherit', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                    {app.status && app.status === \"installing\" && <Spinner className=\"spinner-border-sm m-2\" />}\n                                                    {\" \"}\n                                                    <div className=\"m-2\">{app.status}</div>\n                                                </div>\n                                            </div>\n                                        </div >\n                                    </Col>\n                                )\n                            })}\n                        </Row >\n                    ) : null;\n                })\n            }\n            {\n                showModal && <AppDetailModal current_app={selectedApp} showFlag={showModal} onClose={handleClose} onDataChange={handleDataChange} />\n            }\n            {\n                showUninstallConform &&\n                <UninstallConform showConform={showUninstallConform} onClose={canceldeleteApp} app={selectedApp} onDataChange={handleDataChange} />\n            }\n            {\n                showErrorInfo &&\n                <ErrorInfoModal showConform={showErrorInfo} onClose={cancelShowError} app={selectedApp} />\n            }\n            {\n                showAlert &&\n                <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                    <MyMuiAlert onClose={handleAlertClose} severity={alertType} sx={{ width: '100%' }}>\n                        {alertMessage}\n                    </MyMuiAlert>\n                </Snackbar>\n            }\n        </>\n    );\n};\n\nexport default MyApps;\n"],"names":["PasswordInput","_ref","name","placeholder","refCallback","errors","register","className","value","readOnly","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","InputGroup","Form","Control","_objectSpread","type","id","as","ref","r","isInvalid","autoComplete","defaultValue","classNames","onClick","_ref2","label","labelClassName","containerClass","otherProps","_objectWithoutProperties","_excluded","comp","Group","Label","Feedback","Select","Check","Spinner","props","Tag","tag","color","size","role","concat","_defineProperty","defaultProps","IP","APICore","_createClass","_this","_classCallCheck","getIp","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","cockpit","then","data","trim","catch","error","Error","abrupt","stop","get","_callee2","url","params","http","response","queryString","_context2","Object","keys","map","key","join","_x","_x2","apply","arguments","api","AppList","AppUninstall","AppStop","AppStart","AppRestart","AppDomainAdd","_","MyMuiAlert","React","MuiAlert","elevation","variant","RemoveDomain","navigate","useNavigate","disable","setDisable","_useState3","_useState4","showAlert","setShowAlert","_useState5","_useState6","alertMessage","setAlertMessage","Modal","show","showConform","onHide","onClose","scrollable","backdrop","style","backgroundColor","Header","Body","margin","deleteRowData","domainValue","Alert","Footer","Button","disabled","app_id","domain","JSON","parse","Message","onDataChange","_props$data","_props$data$config","_props$data2","_props$data2$config","_props$data3","_props$data3$config","_props$data4","_props$data4$config","_props$data5","_props$data6","_props$data6$config","_props$data7","_props$data7$config","_props$data8","_props$data8$config","_props$data9","_props$data9$config","_props$data10","_props$data10$config","_props$data11","_props$data11$config","_props$data12","_props$data12$config","_props$data13","_props$data13$config","_props$data14","_props$data14$config","_props$data15","_props$data15$config","_useState7","_useState8","domains","setDomains","_useState9","_useState10","loading","setLoading","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","alertType","setAlertType","_useState17","_useState18","showRemoveDomain","setShowRemoveDomain","_useState19","_useState20","setDeleteRowData","_useState21","_useState22","_React$useState","_React$useState2","isExpandedForDomain","setIsExpandedForDomain","_React$useState3","_React$useState4","isExpandedForNoDomain","setIsExpandedForNoDomain","_React$useState5","_React$useState6","isExpandedForAccount","setIsExpandedForAccount","getDomains","responseData","ResponseData","Domain_set","defaultdomain","default_domain","resturnDomains","newDomainValue","isEditable","isFromAPI","isDefaultDomain","sort","a","b","t0","console","log","useEffect","deleteRow","_ref3","_callee3","row","index","newRows","_context3","_toConsumableArray","splice","setDefaultDomain","_ref4","_callee4","defaultDomain","_context4","_x3","saveRow","_ref5","_callee5","input","regex","_context5","document","getElementsByName","test","domain_old","domain_new","_x4","_x5","handleAlertClose","event","reason","_useState23","_useState24","Card","zIndex","Accordion","defaultExpanded","onChange","newExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","display","href","e","preventDefault","watch","content","AccordionDetails","Row","Col","xs","md","length","config","admin_domain_url","target","_callee6","_context6","FormInput","handleChange","padding","cancelEditRow","editRow","Badge","app_replace_url","admin_url","admin_username","htmlFor","column","admin_password","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","width","containersInfo","customer_name","endpointsId","Table","textAlign","container","_container$Names","_container$Names$","_container$Ports$find","_container$Ports$find2","Names","replace","State","Id","title","Image","Date","Created","toLocaleString","NetworkSettings","Networks","HostConfig","NetworkMode","IPAddress","Ports","find","port","PublicPort","PrivatePort","responsive","bordered","fontWeight","app_name","app_version","create_time","config_path","volume_data","UninstallConform","closeButton","app","sent","onCloseFatherModal","forwardRef","showUninstallConform","setShowUninstallConform","setButtonDisable","setButtonEnable","useImperativeHandle","sm","marginBottom","status","disabledButton","enableButton","finish","restartDisable","setRestartDisable","buttonDisable","current_app","currentApp","setCurrentApp","startAppLoading","setStartAppLoading","stopAppLoading","setStopAppLoading","restartAppLoading","setRestartAppLoading","childRef","useRef","setContainersInfo","setEndpointsId","setMainContainerId","getContainersData","protocol","host","baseURL","jwt","_response$ResponseDat","_response$ResponseDat2","window","location","split","localStorage","getItem","axios","post","username","user","user_name","password","authResponse","setItem","headers","endpointsData","Name","EndpointCreationType","addEndpoint","_addEndpoint$data","URL","includes","all","filters","stringify","containersData","_data$find","setUninstallButtonDisable","current","setUninstallButtonEnable","tabContents","icon","text","AppOverview","AppAccess","AppContainer","Uninstall","showFlag","dialogClassName","alignItems","src","alt","onError","DefaultImg","marginTop","flexGrow","justifyContent","OverlayTrigger","placement","overlay","Tooltip","borderRadius","marginRight","borderColor","Tab","Container","defaultActiveKey","Nav","tab","renderElement","Item","Link","to","eventKey","classnames","Content","height","Pane","ErrorInfoModal","status_reason","Code","Detail","timer","showModal","setShowModal","showErrorInfo","setShowErrorInfo","isLoading","setIsLoading","selectedApp","setSelectedApp","_useState25","_useState26","apps","setApps","_useState27","_useState28","_useState29","_useState30","searchString","setSearchString","_useState31","_useState32","selectedStatus","setSelectedStatus","_useState33","_useState34","selectedAppRef","_useState35","_useState36","code","setCode","_useState37","_useState38","setError","_useState39","_useState40","setErrorDetails","_useState41","_useState42","getAllAppsOnce","Details","newApps","updatedApp","Navigate","setInterval","clearInterval","handleClick","handleDataChange","appActions","NoOfficialAppClick","lg","fontSize","changeStatus","handleInputChange","reload","official_app","filteredApps","filter","paddingTop","i","xxl","Dropdown","Toggle","Menu","align","appStatus","condition","hasDivider","item","Divider","paddingRight","showError","deleteApp","AppDetailModal"],"sourceRoot":""}